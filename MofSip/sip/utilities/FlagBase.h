#pragma once

namespace sip
{
	// ********************************************************************************
	/// <summary>
	/// フラグ処理用クラス
	/// </summary>
	// ********************************************************************************
	template<typename T >
	class CFlagBase
	{
	private:

		T m_Flags{ 0 };  //! フラグ変数

	public:

		// ********************************************************************************
		/// <summary>
		/// コンストラクタ
		/// </summary>
		/// <created>いのうえ,2020/12/07</created>
		/// <changed>いのうえ,2020/12/07</changed>
		// ********************************************************************************
		CFlagBase(void) = default;
		
		// ********************************************************************************
		/// <summary>
		/// デストラクタ
		/// </summary>
		/// <created>いのうえ,2020/12/07</created>
		/// <changed>いのうえ,2020/12/07</changed>
		// ********************************************************************************
		~CFlagBase(void) = default;

		// ********************************************************************************
		/// <summary>
		/// フラグのセット
		/// </summary>
		/// <param name="bit">セットするフラグ</param>
		/// <created>いのうえ,2020/12/07</created>
		/// <changed>いのうえ,2020/12/07</changed>
		// ********************************************************************************
		void Set(const T& bit)
		{
			m_Flags |= bit;
		}

		// ********************************************************************************
		/// <summary>
		/// フラグのリセット
		/// </summary>
		/// <param name="bit">リセットするフラグ</param>
		/// <created>いのうえ,2020/12/07</created>
		/// <changed>いのうえ,2020/12/07</changed>
		// ********************************************************************************
		void Reset(const T& bit)
		{
			m_Flags &= ~bit;
		}

		// ********************************************************************************
		/// <summary>
		/// フラグのチェック
		/// </summary>
		/// <param name="bit">チェックするフラグ</param>
		/// <returns>true : 立っている, false : 立っていない</returns>
		/// <created>いのうえ,2020/12/07</created>
		/// <changed>いのうえ,2020/12/07</changed>
		// ********************************************************************************
		bool Check(const T& bit)
		{
			return ((m_Flags & bit) != 0);
		}
	};
}